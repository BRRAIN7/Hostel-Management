///*
// * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
// * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
// */
//
///**
// *
// * @author karole
// */
//
//package UserInterface;
//import DAO.RoomOperations;
//import Entities.Room;
//
//import javax.swing.*;
//import javax.swing.table.DefaultTableModel;
//import java.util.List;
//
//
//public class RoomDetailsUI extends javax.swing.JFrame {
//
//    /**
//     * Creates new form RoomDetailsUI
//     */
//    public RoomDetailsUI() {
//        initComponents();
//        loadRoomDetails();
//    }
//
//    /**
//     * This method is called from within the constructor to initialize the form.
//     * WARNING: Do NOT modify this code. The content of this method is always
//     * regenerated by the Form Editor.
//     */
//    private void loadRoomDetails() {
//        try {
//            List<Room> roomList = DAO.RoomOperations.getAllRooms();
//            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
//            model.setRowCount(0); // Clear table
//
//            for (Room room : roomList) {
//                model.addRow(new Object[]{
//                        room.getRoomId(),
//                        room.getRoomNo(),
//                        room.getRoomType(),
//                        room.getCapacity(),
//                        room.getRemainingCapacity()
//                });
//            }
//
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(this, "Failed to load room details:\n" + e.getMessage());
//        }
//    }
//    @SuppressWarnings("unchecked")
//    // <editor-fold defaultstate="collapsed" desc="Generated Code">
//    private void initComponents() {
//
//        jScrollPane1 = new javax.swing.JScrollPane();
//        jTable1 = new javax.swing.JTable();
//        jLabel1 = new javax.swing.JLabel();
//        jSeparator1 = new javax.swing.JSeparator();
//        jLabel2 = new javax.swing.JLabel();
//        jLabel3 = new javax.swing.JLabel();
//        jTextField1 = new javax.swing.JTextField();
//        jLabel4 = new javax.swing.JLabel();
//        jTextField2 = new javax.swing.JTextField();
//        jLabel5 = new javax.swing.JLabel();
//        jTextField3 = new javax.swing.JTextField();
//        jButton1 = new javax.swing.JButton();
//        jButton2 = new javax.swing.JButton();
//
//        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
//
//        jTable1.setModel(new javax.swing.table.DefaultTableModel(
//                new Object [][] {
//                        {null, null, null, null, null},
//                        {null, null, null, null, null},
//                        {null, null, null, null, null},
//                        {null, null, null, null, null}
//                },
//                new String [] {
//                        "Room ID", "Room Number", "Room Type", "Capacity", "Remaining Capacity"
//                }
//        ));
//        jScrollPane1.setViewportView(jTable1);
//
//        jLabel1.setText("Room Details");
//
//        jLabel2.setText("Add Room");
//
//        jLabel3.setText("Enter  Room number");
//
//        jLabel4.setText("Room Type");
//
//        jLabel5.setText("Capacity");
//
//        jTextField3.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                jTextField3ActionPerformed(evt);
//            }
//        });
//
//        jButton1.setText("Add Room");
//        jButton1.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                jButton1ActionPerformed(evt);
//            }
//        });
//
//        jButton2.setText("Reset");
//        jButton2.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                jButton2ActionPerformed(evt);
//            }
//        });
//
//        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
//        getContentPane().setLayout(layout);
//        layout.setHorizontalGroup(
//                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                        .addGroup(layout.createSequentialGroup()
//                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                                        .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
//                                        .addGroup(layout.createSequentialGroup()
//                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                                                        .addGroup(layout.createSequentialGroup()
//                                                                .addGap(34, 34, 34)
//                                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 822, javax.swing.GroupLayout.PREFERRED_SIZE))
//                                                        .addGroup(layout.createSequentialGroup()
//                                                                .addContainerGap()
//                                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
//                                                        .addGroup(layout.createSequentialGroup()
//                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
//                                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
//                                                                                .addGap(136, 136, 136)
//                                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                                                                                        .addGroup(layout.createSequentialGroup()
//                                                                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
//                                                                                                .addGap(138, 138, 138)
//                                                                                                .addComponent(jTextField1))
//                                                                                        .addGroup(layout.createSequentialGroup()
//                                                                                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
//                                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                                                                                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))))
//                                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
//                                                                                .addGap(415, 415, 415)
//                                                                                .addComponent(jLabel1)))
//                                                                .addGap(326, 326, 326)))
//                                                .addGap(25, 25, 25)))
//                                .addContainerGap())
//                        .addGroup(layout.createSequentialGroup()
//                                .addGap(128, 128, 128)
//                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
//                                .addGap(172, 172, 172)
//                                .addComponent(jTextField3)
//                                .addGap(357, 357, 357))
//                        .addGroup(layout.createSequentialGroup()
//                                .addGap(147, 147, 147)
//                                .addComponent(jButton1)
//                                .addGap(166, 166, 166)
//                                .addComponent(jButton2)
//                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//        layout.setVerticalGroup(
//                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
//                                .addContainerGap()
//                                .addComponent(jLabel1)
//                                .addGap(7, 7, 7)
//                                .addComponent(jLabel2)
//                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                                        .addComponent(jLabel3)
//                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                                        .addComponent(jLabel4)
//                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                                .addGap(26, 26, 26)
//                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                                        .addComponent(jLabel5)
//                                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                                .addGap(40, 40, 40)
//                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                                        .addComponent(jButton1)
//                                        .addComponent(jButton2))
//                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
//                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
//                                .addGap(50, 50, 50)
//                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
//                                .addGap(23, 23, 23))
//        );
//
//        pack();
//    }// </editor-fold>
//
//    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {
//        // TODO add your handling code here:
//    }
//
//    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
//        String roomNo = jTextField1.getText();
//        String type = jTextField2.getText();
//        String capacity = jTextField3.getText();
//
//        Services.RoomController.addRoom(roomNo, type, capacity);
//        loadRoomDetails(); // Refresh table after adding
//    }
//
//    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
//        // TODO add your handling code here:
//    }
//
//    public static void showRoomDetails() {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(RoomDetailsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(RoomDetailsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(RoomDetailsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(RoomDetailsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new RoomDetailsUI().setVisible(true);
//            }
//        });
//    }
//
//    // Variables declaration - do not modify
//    private javax.swing.JButton jButton1;
//    private javax.swing.JButton jButton2;
//    private javax.swing.JLabel jLabel1;
//    private javax.swing.JLabel jLabel2;
//    private javax.swing.JLabel jLabel3;
//    private javax.swing.JLabel jLabel4;
//    private javax.swing.JLabel jLabel5;
//    private javax.swing.JScrollPane jScrollPane1;
//    private javax.swing.JSeparator jSeparator1;
//    private javax.swing.JTable jTable1;
//    private javax.swing.JTextField jTextField1;
//    private javax.swing.JTextField jTextField2;
//    private javax.swing.JTextField jTextField3;
//    // End of variables declaration
//}


package UserInterface;

import Entities.Room;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.net.URL;
import java.awt.event.ActionEvent;

public class RoomDetailsUI extends JFrame {

    private JTextField roomNumberField, roomTypeField, capacityField;
    private JTable roomTable;
    private DefaultTableModel tableModel;
    private void loadRoomDetails() {
        try {
            java.util.List<Room> roomList = DAO.RoomOperations.getAllRooms();
            DefaultTableModel model = (DefaultTableModel) roomTable.getModel();
            model.setRowCount(0); // Clear table

            for (Room room : roomList) {
                model.addRow(new Object[]{
                        room.getRoomId(),
                        room.getRoomNo(),
                        room.getRoomType(),
                        room.getCapacity(),
                        room.getRemainingCapacity()
                });
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Failed to load room details:\n" + e.getMessage());
        }
    }

    public RoomDetailsUI() {
        setTitle("Room Details");
        setSize(1300, 700);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        // Load background image
        URL imageUrl = getClass().getResource("/UserInterface/h6.jpg");
        ImageIcon backgroundIcon = (imageUrl != null) ? new ImageIcon(imageUrl) : null;

        JLabel backgroundLabel = new JLabel();
        if (backgroundIcon != null) {
            backgroundLabel.setIcon(backgroundIcon);
        } else {
            backgroundLabel.setOpaque(true);
            backgroundLabel.setBackground(Color.LIGHT_GRAY);
        }

        setContentPane(backgroundLabel);
        backgroundLabel.setLayout(new BorderLayout());

        // Top Panel with form
        JPanel topPanel = new JPanel();
        topPanel.setOpaque(false);
        topPanel.setLayout(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(10, 20, 10, 20);
        gbc.anchor = GridBagConstraints.WEST;

        JLabel titleLabel = new JLabel("Room Details");
        titleLabel.setFont(new Font("Serif", Font.BOLD, 34));
        titleLabel.setForeground(Color.DARK_GRAY);
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridwidth = 2;
        topPanel.add(titleLabel, gbc);
        gbc.gridwidth = 1;

        // Room Number Label and Field
        gbc.gridy++;
        gbc.gridx = 0;
        JLabel roomNumberLabel = new JLabel("Enter Room number");
        roomNumberLabel.setFont(new Font("Arial", Font.PLAIN, 20));
        topPanel.add(roomNumberLabel, gbc);

        gbc.gridx = 1;
        roomNumberField = new JTextField(15);
        roomNumberField.setFont(new Font("Arial", Font.PLAIN, 18));
        topPanel.add(roomNumberField, gbc);

        // Room Type Label and Field
        gbc.gridx = 0;
        gbc.gridy++;
        JLabel roomTypeLabel = new JLabel("Room Type");
        roomTypeLabel.setFont(new Font("Arial", Font.PLAIN, 20));
        topPanel.add(roomTypeLabel, gbc);

        gbc.gridx = 1;
        roomTypeField = new JTextField(15);
        roomTypeField.setFont(new Font("Arial", Font.PLAIN, 18));
        topPanel.add(roomTypeField, gbc);

        // Capacity Label and Field
        gbc.gridx = 0;
        gbc.gridy++;
        JLabel capacityLabel = new JLabel("Capacity");
        capacityLabel.setFont(new Font("Arial", Font.PLAIN, 20));
        topPanel.add(capacityLabel, gbc);

        gbc.gridx = 1;
        capacityField = new JTextField(15);
        capacityField.setFont(new Font("Arial", Font.PLAIN, 18));
        topPanel.add(capacityField, gbc);

        // Buttons
        gbc.gridy++;
        gbc.gridx = 0;
        JButton addBtn = createStyledButton("Add Room", this::addRoom);
        topPanel.add(addBtn, gbc);

        gbc.gridx = 1;
        JButton resetBtn = createStyledButton("Reset", this::resetFields);
        topPanel.add(resetBtn, gbc);

        backgroundLabel.add(topPanel, BorderLayout.NORTH);

        // Table for room info
        JPanel tablePanel = new JPanel();
        tablePanel.setOpaque(false);
        String[] columns = {"Room ID", "Room Number", "Room Type", "Capacity", "Remaining Capacity"};
        Object[][] data = {
                        {null, null, null, null, null},
                        {null, null, null, null, null},
                        {null, null, null, null, null},
                        {null, null, null, null, null}
        };

        tableModel = new DefaultTableModel(data, columns);
        roomTable = new JTable(tableModel);
        JScrollPane scrollPane = new JScrollPane(roomTable);
        scrollPane.setPreferredSize(new Dimension(1000, 200));
        tablePanel.add(scrollPane);
        backgroundLabel.add(tablePanel, BorderLayout.CENTER);
        loadRoomDetails();
        setVisible(true);
    }

    private JButton createStyledButton(String text, java.awt.event.ActionListener action) {
        JButton button = new JButton(text);
        button.setFont(new Font("Arial", Font.BOLD, 18));
        button.setBackground(new Color(60, 120, 180));
        button.setForeground(Color.RED);
        button.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        button.setFocusPainted(false);
        button.setBorder(BorderFactory.createEmptyBorder(8, 20, 8, 20));
        button.addActionListener(action);
        return button;
    }

    private void resetFields(ActionEvent e) {
        roomNumberField.setText("");
        roomTypeField.setText("");
        capacityField.setText("");
    }

    private void addRoom(ActionEvent evt) {
        String roomNo = roomNumberField.getText();
        String type = roomTypeField.getText();
        String capacity = capacityField.getText();

        Services.RoomController.addRoom(roomNo, type, capacity);
        loadRoomDetails(); // Refresh table after adding
    }

    public static void showRoomDetails() {
        SwingUtilities.invokeLater(RoomDetailsUI::new);
    }
}
