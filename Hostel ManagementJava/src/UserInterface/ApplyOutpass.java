///*
// * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
// * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
// */
//package UserInterface;
//
//import Entities.Outpass;
//import Services.OutpassController;
//import Services.Session;
//
//import javax.swing.*;
//import javax.swing.table.DefaultTableModel;
//import java.util.List;
//
///**
// *
// * @author karole
// */
//public class ApplyOutpass extends javax.swing.JFrame {
//
//    private DefaultTableModel tableModel;
//    private String studentId;
//    private OutpassController outpassController;
//
//    public ApplyOutpass() {
//        initComponents();
//        this.setLocationRelativeTo(null);
//        studentId = Session.getUserId();
//        outpassController = new OutpassController();
//
//        // Set the table model
//        tableModel = (DefaultTableModel) jTable1.getModel();
//
//        // Load previous applications
//        loadPreviousApplications();
//    }
//    private void loadPreviousApplications() {
//        // Clear existing table data
//        tableModel.setRowCount(0);
//
//        try {
//            // Get all outpasses for the current student
//            List<Outpass> outpasses = outpassController.getStudentOutpasses(studentId);
//
//            // Add each outpass to the table
//            for (Outpass outpass : outpasses) {
//                tableModel.addRow(new Object[]{
//                        outpass.getOutpassId(),
//                        outpass.getPurpose(),
//                        outpass.getDateOfIssue().toString(),
//                        outpass.getStatus()
//                });
//            }
//        } catch (Exception ex) {
//            JOptionPane.showMessageDialog(this, "Error loading previous applications: " + ex.getMessage());
//        }
//    }
//    /**
//     * This method is called from within the constructor to initialize the form.
//     * WARNING: Do NOT modify this code. The content of this method is always
//     * regenerated by the Form Editor.
//     */
//    @SuppressWarnings("unchecked")
//    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
//    private void initComponents() {
//
//        jLabel1 = new javax.swing.JLabel();
//        jLabel2 = new javax.swing.JLabel();
//        jLabel3 = new javax.swing.JLabel();
//        jTextField1 = new javax.swing.JTextField();
//        jTextField2 = new javax.swing.JTextField();
//        jTextField3 = new javax.swing.JTextField();
//        jLabel4 = new javax.swing.JLabel();
//        jScrollPane1 = new javax.swing.JScrollPane();
//        jTable1 = new javax.swing.JTable();
//        jLabel5 = new javax.swing.JLabel();
//        jButton1 = new javax.swing.JButton();
//        jButton2 = new javax.swing.JButton();
//
//        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
//
//        jLabel1.setText("Apply for outpass");
//
//        jLabel2.setText("Departure Time");
//
//        jLabel3.setText("Return Date");
//
//        jLabel4.setText("Purpose");
//
//        jTable1.setModel(new javax.swing.table.DefaultTableModel(
//            new Object [][] {
//                {null, null, null, null},
//                {null, null, null, null},
//                {null, null, null, null},
//                {null, null, null, null}
//            },
//            new String [] {
//                "Outpass ID", "Purpose", "Date of Issue", "Status"
//            }
//        ));
//        jScrollPane1.setViewportView(jTable1);
//
//        jLabel5.setText("Prevoious Applications:");
//
//        jButton1.setText("Apply");
//        jButton1.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                jButton1ActionPerformed(evt);
//            }
//        });
//
//        jButton2.setText("Reset");
//        jButton2.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                jButton2ActionPerformed(evt);
//            }
//        });
//
//        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
//        getContentPane().setLayout(layout);
//        layout.setHorizontalGroup(
//            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addGap(376, 376, 376))
//            .addGroup(layout.createSequentialGroup()
//                .addGap(88, 88, 88)
//                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addGroup(layout.createSequentialGroup()
//                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
//                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
//                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
//                                .addComponent(jButton1)
//                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
//                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                            .addGroup(layout.createSequentialGroup()
//                                .addGap(138, 138, 138)
//                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
//                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                                        .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
//                                        .addComponent(jTextField1)
//                                        .addComponent(jTextField2))))
//                            .addGroup(layout.createSequentialGroup()
//                                .addGap(110, 110, 110)
//                                .addComponent(jButton2)))))
//                .addContainerGap(116, Short.MAX_VALUE))
//        );
//        layout.setVerticalGroup(
//            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(layout.createSequentialGroup()
//                .addContainerGap()
//                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addGap(37, 37, 37)
//                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addGap(18, 18, 18)
//                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addGap(18, 18, 18)
//                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(jLabel4))
//                .addGap(36, 36, 36)
//                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jButton1)
//                    .addComponent(jButton2))
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
//                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addGap(18, 18, 18)
//                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addGap(127, 127, 127))
//        );
//
//        pack();
//    }// </editor-fold>//GEN-END:initComponents
//
//    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
//        // Get input values
//        String departureTime = jTextField1.getText().trim();
//        String returnDate = jTextField2.getText().trim();
//        String purpose = jTextField3.getText().trim();
//
//        // Validate inputs
//        if (departureTime.isEmpty() || returnDate.isEmpty() || purpose.isEmpty()) {
//            JOptionPane.showMessageDialog(this, "Please fill all fields", "Error", JOptionPane.ERROR_MESSAGE);
//            return;
//        }
//
//        try {
//            // Apply for outpass using controller
//            boolean success = outpassController.applyForOutpass(departureTime, returnDate, purpose, studentId);
//
//            if (success) {
//                JOptionPane.showMessageDialog(this, "Outpass application submitted successfully!");
//
//                // Clear fields
//                resetForm();
//
//                // Refresh previous applications table
//                loadPreviousApplications();
//            } else {
//                JOptionPane.showMessageDialog(this, "Failed to submit outpass application",
//                        "Error", JOptionPane.ERROR_MESSAGE);
//            }
//        } catch (Exception ex) {
//            JOptionPane.showMessageDialog(this, "Error applying for outpass: " + ex.getMessage(),
//                    "Error", JOptionPane.ERROR_MESSAGE);
//        }
//    }//GEN-LAST:event_jButton1ActionPerformed
//
//    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
//        // Reset all text fields
//        resetForm();
//    }//GEN-LAST:event_jButton2ActionPerformed
//
//    private void resetForm() {
//        jTextField1.setText("");
//        jTextField2.setText("");
//        jTextField3.setText("");
//    }
//
//
//    public void openApplyOutpass() {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ApplyOutpass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ApplyOutpass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ApplyOutpass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ApplyOutpass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ApplyOutpass().setVisible(true);
//            }
//        });
//    }
//
//    // Variables declaration - do not modify//GEN-BEGIN:variables
//    private javax.swing.JButton jButton1;
//    private javax.swing.JButton jButton2;
//    private javax.swing.JLabel jLabel1;
//    private javax.swing.JLabel jLabel2;
//    private javax.swing.JLabel jLabel3;
//    private javax.swing.JLabel jLabel4;
//    private javax.swing.JLabel jLabel5;
//    private javax.swing.JScrollPane jScrollPane1;
//    private javax.swing.JTable jTable1;
//    private javax.swing.JTextField jTextField1;
//    private javax.swing.JTextField jTextField2;
//    private javax.swing.JTextField jTextField3;
//    // End of variables declaration//GEN-END:variables
//}



package UserInterface;

import Entities.Outpass;
import Services.OutpassController;
import Services.Session;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.io.File;
import java.util.List;

public class ApplyOutpass extends JFrame {
    private JTextField departureField, returnField, purposeField;
    private JButton applyButton, resetButton;
    private JTable table;
    private DefaultTableModel tableModel;
    private String studentId;
    private OutpassController outpassController;

    private void loadPreviousApplications() {
        // Clear existing table data
        tableModel.setRowCount(0);

        try {
            String studentId = Session.getUserId(); // Assuming you're using Session class for current user

            // Get all outpasses for the current student
            List<Outpass> outpasses = outpassController.getStudentOutpasses(studentId);

            // Add each outpass to the table
            for (Outpass outpass : outpasses) {
                tableModel.addRow(new Object[]{
                        outpass.getOutpassId(),
                        outpass.getPurpose(),
                        outpass.getDateOfIssue().toString(),
                        outpass.getStatus()
                });
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error loading previous applications: " + ex.getMessage());
        }
    }
    public ApplyOutpass() {
        setTitle("Outpass Application");
        setSize(1300, 700);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setLocationRelativeTo(null); // Center on screen
        outpassController = new OutpassController();

        try {
            File imageFile = new File("src/UserInterface/h6.jpg");
            if (!imageFile.exists()) throw new Exception("Background image not found");

            ImageIcon backgroundIcon = new ImageIcon(imageFile.getAbsolutePath());
            JLabel backgroundLabel = new JLabel(backgroundIcon);
            backgroundLabel.setLayout(null); // Allow absolute positioning
            setContentPane(backgroundLabel);
        } catch (Exception e) {
            System.out.println("Background image error: " + e.getMessage());
            getContentPane().setBackground(new Color(220, 225, 230));
        }

        setLayout(null);

        int frameWidth = 1300;
        int centerX = frameWidth / 2;

        JLabel titleLabel = new JLabel("Apply for Outpass", JLabel.CENTER);
        titleLabel.setBounds(0, 20, frameWidth, 30);
        titleLabel.setFont(new Font("Arial", Font.BOLD, 24));
        add(titleLabel);

        int labelWidth = 150;
        int fieldWidth = 200;
        int spacingY = 40;
        int baseY = 80;

        // Labels and fields
        JLabel depLabel = new JLabel("Departure Time:");
        depLabel.setBounds(centerX - labelWidth - 10, baseY, labelWidth, 25);
        add(depLabel);

        departureField = new JTextField();
        departureField.setBounds(centerX + 10, baseY, fieldWidth, 25);
        add(departureField);

        JLabel returnLabel = new JLabel("Return Date:");
        returnLabel.setBounds(centerX - labelWidth - 10, baseY + spacingY, labelWidth, 25);
        add(returnLabel);

        returnField = new JTextField();
        returnField.setBounds(centerX + 10, baseY + spacingY, fieldWidth, 25);
        add(returnField);

        JLabel purposeLabel = new JLabel("Purpose:");
        purposeLabel.setBounds(centerX - labelWidth - 10, baseY + spacingY * 2, labelWidth, 25);
        add(purposeLabel);

        purposeField = new JTextField();
        purposeField.setBounds(centerX + 10, baseY + spacingY * 2, fieldWidth, 25);
        add(purposeField);

        // Buttons
        applyButton = new JButton("Apply");
        applyButton.setBounds(centerX - 50 - 55, baseY + spacingY * 3 + 10, 100, 30);
        add(applyButton);

        resetButton = new JButton("Reset");
        resetButton.setBounds(centerX + 50 - 45, baseY + spacingY * 3 + 10, 100, 30);
        add(resetButton);

        // Table section
        JLabel prevLabel = new JLabel("Previous Applications:");
        prevLabel.setBounds(centerX - 100, baseY + spacingY * 4 + 20, 200, 30);
        prevLabel.setFont(new Font("Arial", Font.BOLD, 16));
        add(prevLabel);

        String[] columns = {"Outpass ID", "Purpose", "Date of Issue", "Status"};
        Object[][] data = {
                {null, null, null, null},
                {null, null, null, null},
        };
        tableModel = new DefaultTableModel(columns, 0); // Empty table initially
        table = new JTable(tableModel);
        JScrollPane scrollPane = new JScrollPane(table);
        scrollPane.setBounds(centerX - 300, baseY + spacingY * 5 + 10, 600, 150);
        add(scrollPane);
        loadPreviousApplications();
        // Listeners
        applyButton.addActionListener(e -> applyForOutpass());
        resetButton.addActionListener(e -> resetFields());

        setVisible(true);
    }

    private void applyForOutpass() {
        // Get input values
        String departureTime = departureField.getText().trim();
        String returnDate = returnField.getText().trim();
        String purpose = purposeField.getText().trim();

        // Validate inputs
        if (departureTime.isEmpty() || returnDate.isEmpty() || purpose.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill all fields", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            String studentId = Session.getUserId(); // use Session class if available

            // Apply for outpass using controller
            boolean success = outpassController.applyForOutpass(departureTime, returnDate, purpose, studentId);

            if (success) {
                JOptionPane.showMessageDialog(this, "Outpass application submitted successfully!");

                // Clear fields
                resetFields();

                // Refresh previous applications table
                loadPreviousApplications();
            } else {
                JOptionPane.showMessageDialog(this, "Failed to submit outpass application", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error applying for outpass: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }


    private void resetFields() {
        departureField.setText("");
        returnField.setText("");
        purposeField.setText("");
    }

    public void openApplyOutpass() {
        SwingUtilities.invokeLater(()->this.setVisible(true));
    }
}