//package UserInterface;
//
///*
// * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
// * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
// */
//
//import Entities.Complaint;
//import Services.ComplaintController;
//
//import javax.swing.*;
//import javax.swing.table.DefaultTableModel;
//import java.util.List;
//
///**
// *
// * @author karole
// */
//public class ReviewComplaintsUI extends javax.swing.JFrame {
//
//    /**
//     * Creates new form ReviewComplaints
//     */
//    public ReviewComplaintsUI() {
//        initComponents();
//        loadComplaintsIntoTable();
//    }
//    private void loadComplaintsIntoTable() {
//        try {
//            ComplaintController controller = new ComplaintController();
//            List<Complaint> complaints = controller.getAllComplaints();
//
//            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
//            model.setRowCount(0); // Clear existing rows
//
//            for (Complaint c : complaints) {
//                model.addRow(new Object[]{
//                        c.getComplaintId(),   // 1
//                        c.getType(),          // 2
//                        c.getDate(),          // 3
//                        c.getDescription(),   // 4
//                        c.getStatus(),        // 5
//                        c.getResolution()     // 6
//                });
//            }
//
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(this, "Failed to load complaints.");
//            e.printStackTrace();
//        }
//    }
//
//    /**
//     * This method is called from within the constructor to initialize the form.
//     * WARNING: Do NOT modify this code. The content of this method is always
//     * regenerated by the Form Editor.
//     */
//    @SuppressWarnings("unchecked")
//    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
//    private void initComponents() {
//
//        jLabel1 = new javax.swing.JLabel();
//        jScrollPane1 = new javax.swing.JScrollPane();
//        jTable1 = new javax.swing.JTable();
//        jLabel2 = new javax.swing.JLabel();
//        jLabel3 = new javax.swing.JLabel();
//        jTextField1 = new javax.swing.JTextField();
//        jLabel4 = new javax.swing.JLabel();
//        jTextField2 = new javax.swing.JTextField();
//        jLabel5 = new javax.swing.JLabel();
//        jTextField3 = new javax.swing.JTextField();
//        jButton1 = new javax.swing.JButton();
//        jButton2 = new javax.swing.JButton();
//
//        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
//
//        jLabel1.setText("Review Compalints");
//
//        jTable1.setModel(new javax.swing.table.DefaultTableModel(
//            new Object [][] {
//                {null, null, null, null, null, null},
//                {null, null, null, null, null, null},
//                {null, null, null, null, null, null},
//                {null, null, null, null, null, null}
//            },
//            new String [] {
//                    "Complaint ID", "Complaint Type", "Date", "Description", "Status", "Resolution"
//            }
//
//        ));
//        jScrollPane1.setViewportView(jTable1);
//
//        jLabel2.setText("Edit Complaints");
//
//        jLabel3.setText("Complaint ID");
//
//        jTextField1.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                jTextField1ActionPerformed(evt);
//            }
//        });
//
//        jLabel4.setText("Resolution");
//
//        jLabel5.setText("Status");
//
//        jButton1.setText("Save");
//        jButton1.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                jButton1ActionPerformed(evt);
//            }
//        });
//
//        jButton2.setText("Reset");
//
//        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
//        getContentPane().setLayout(layout);
//        layout.setHorizontalGroup(
//            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(layout.createSequentialGroup()
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addGap(366, 366, 366))
//            .addGroup(layout.createSequentialGroup()
//                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addGroup(layout.createSequentialGroup()
//                        .addGap(24, 24, 24)
//                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 846, javax.swing.GroupLayout.PREFERRED_SIZE))
//                    .addGroup(layout.createSequentialGroup()
//                        .addGap(395, 395, 395)
//                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
//                    .addGroup(layout.createSequentialGroup()
//                        .addGap(268, 268, 268)
//                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
//                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
//                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
//                                .addComponent(jButton1)
//                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
//                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                            .addGroup(layout.createSequentialGroup()
//                                .addGap(120, 120, 120)
//                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                                    .addComponent(jTextField1)
//                                    .addComponent(jTextField2)
//                                    .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)))
//                            .addGroup(layout.createSequentialGroup()
//                                .addGap(90, 90, 90)
//                                .addComponent(jButton2)))))
//                .addContainerGap(24, Short.MAX_VALUE))
//        );
//        layout.setVerticalGroup(
//            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(layout.createSequentialGroup()
//                .addGap(41, 41, 41)
//                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addGap(81, 81, 81)
//                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addGap(18, 18, 18)
//                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addGap(35, 35, 35)
//                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                    .addComponent(jTextField1))
//                .addGap(18, 18, 18)
//                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addComponent(jLabel4)
//                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addGap(18, 18, 18)
//                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addComponent(jLabel5)
//                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
//                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jButton1)
//                    .addComponent(jButton2))
//                .addGap(30, 30, 30))
//        );
//
//        pack();
//    }// </editor-fold>//GEN-END:initComponents
//
//    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
//        // TODO add your handling code here:
//    }//GEN-LAST:event_jTextField1ActionPerformed
//
//    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
//        String complaintId = jTextField1.getText().trim();
//        String resolution = jTextField2.getText().trim();
//        String status = jTextField3.getText().trim();
//
//        ComplaintController service = new ComplaintController();
//        String result = service.updateComplaint(complaintId, status, resolution);
//
//        JOptionPane.showMessageDialog(this, result);
//        loadComplaintsIntoTable();
//    }//GEN-LAST:event_jButton1ActionPerformed
//
//
//    public static void openComplaintReview() {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ReviewComplaintsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ReviewComplaintsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ReviewComplaintsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ReviewComplaintsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ReviewComplaintsUI().setVisible(true);
//            }
//        });
//    }
//
//    // Variables declaration - do not modify//GEN-BEGIN:variables
//    private javax.swing.JButton jButton1;
//    private javax.swing.JButton jButton2;
//    private javax.swing.JLabel jLabel1;
//    private javax.swing.JLabel jLabel2;
//    private javax.swing.JLabel jLabel3;
//    private javax.swing.JLabel jLabel4;
//    private javax.swing.JLabel jLabel5;
//    private javax.swing.JScrollPane jScrollPane1;
//    private javax.swing.JTable jTable1;
//    private javax.swing.JTextField jTextField1;
//    private javax.swing.JTextField jTextField2;
//    private javax.swing.JTextField jTextField3;
//    // End of variables declaration//GEN-END:variables
//}

package UserInterface;

import Entities.Complaint;
import Services.ComplaintController;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.*;
import java.net.URL;
import javax.imageio.ImageIO;
import java.util.List;

public class ReviewComplaintsUI extends JFrame {
    private BufferedImage bgImage;
    private JTable jTable1;

    private void loadComplaintsIntoTable() {
        try {
            ComplaintController controller = new ComplaintController();
            List<Complaint> complaints = controller.getAllComplaints();

            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0); // Clear existing rows

            for (Complaint c : complaints) {
                model.addRow(new Object[]{
                        c.getComplaintId(),   // 1
                        c.getType(),          // 2
                        c.getDate(),          // 3
                        c.getDescription(),   // 4
                        c.getStatus(),        // 5
                        c.getResolution()     // 6
                });
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Failed to load complaints.");
            e.printStackTrace();
        }
    }

    public ReviewComplaintsUI() {
        setTitle("Review Complaints");
        setSize(1300, 700);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLocationRelativeTo(null);

        // Load background image with error handling
        try {
            URL imageUrl = getClass().getResource("/UserInterface/h6.jpg");
            if (imageUrl != null) {
                bgImage = ImageIO.read(imageUrl);
            } else {
                throw new FileNotFoundException("Image resource '/UserInterface/h6.jpg' not found.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Background image could not be loaded!", "Error", JOptionPane.ERROR_MESSAGE);
        }

        BackgroundPanel backgroundPanel = new BackgroundPanel(bgImage);
        backgroundPanel.setLayout(new BorderLayout());

        // -------- Review Complaints Table --------
        String[] columns = {"Complaint ID", "Complaint Type", "Date", "Description", "Status", "Resolution"};
        Object[][] data = {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
        };

        jTable1 = new JTable(new DefaultTableModel(data, columns));
        JScrollPane scrollPane = new JScrollPane(jTable1);

        JLabel titleLabel = new JLabel("Review Complaints", JLabel.CENTER);
        titleLabel.setFont(new Font("Arial", Font.BOLD, 20));
        titleLabel.setForeground(Color.BLACK);

        JPanel topPanel = new JPanel(new BorderLayout());
        topPanel.setOpaque(false);
        topPanel.add(titleLabel, BorderLayout.NORTH);
        topPanel.add(scrollPane, BorderLayout.CENTER);

        // -------- Edit Complaint Form --------
        JPanel formPanel = new JPanel();
        formPanel.setOpaque(false);
        formPanel.setLayout(new GridLayout(5, 2, 10, 10));

        JLabel complaintIdLabel = new JLabel("Complaint ID:");
        JLabel resolutionLabel = new JLabel("Resolution:");
        JLabel statusLabel = new JLabel("Status:");

        JTextField complaintIdField = new JTextField();
        JTextField resolutionField = new JTextField();
        JTextField statusField = new JTextField();

        JButton saveButton = new JButton("Save");
        JButton resetButton = new JButton("Reset");

        // ✅ Save Button Logic with validation and update
        saveButton.addActionListener(e -> {
            String complaintId = complaintIdField.getText().trim();
            String resolution = resolutionField.getText().trim();
            String status = statusField.getText().trim();

            // ✅ Validate status
            if (!status.equalsIgnoreCase("Pending") && !status.equalsIgnoreCase("Resolved")) {
                JOptionPane.showMessageDialog(
                        this,
                        "Status must be either 'Pending' or 'Resolved'.",
                        "Invalid Status",
                        JOptionPane.WARNING_MESSAGE
                );
                return;
            }

            // ✅ Call service to update
            ComplaintController service = new ComplaintController();
            String result = service.updateComplaint(complaintId, status, resolution);

            // ✅ Show result and refresh table
            JOptionPane.showMessageDialog(this, result);
            loadComplaintsIntoTable();
        });

        // 🔁 Reset button clears the fields
        resetButton.addActionListener(e -> {
            complaintIdField.setText("");
            resolutionField.setText("");
            statusField.setText("");
        });

        formPanel.add(complaintIdLabel);
        formPanel.add(complaintIdField);
        formPanel.add(resolutionLabel);
        formPanel.add(resolutionField);
        formPanel.add(statusLabel);
        formPanel.add(statusField);
        formPanel.add(saveButton);
        formPanel.add(resetButton);

        JPanel editWrapper = new JPanel(new BorderLayout());
        editWrapper.setOpaque(false);

        JLabel editLabel = new JLabel("Edit Complaints", JLabel.CENTER);
        editLabel.setFont(new Font("Arial", Font.BOLD, 18));
        editLabel.setForeground(Color.RED);
        editWrapper.add(editLabel, BorderLayout.NORTH);
        editWrapper.add(formPanel, BorderLayout.CENTER);

        backgroundPanel.add(topPanel, BorderLayout.CENTER);
        backgroundPanel.add(editWrapper, BorderLayout.SOUTH);
        loadComplaintsIntoTable();
        setContentPane(backgroundPanel);
        setVisible(true);
    }

    // Background panel class with fallback color
    class BackgroundPanel extends JPanel {
        private BufferedImage image;

        public BackgroundPanel(BufferedImage image) {
            this.image = image;
        }

        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            if (image != null) {
                g.drawImage(image, 0, 0, getWidth(), getHeight(), this);
            } else {
                g.setColor(Color.DARK_GRAY);
                g.fillRect(0, 0, getWidth(), getHeight());
            }
        }
    }

    public void openComplaintReview() {
        SwingUtilities.invokeLater(() -> this.setVisible(true));
    }
}

